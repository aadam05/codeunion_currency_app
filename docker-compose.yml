services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$DB_USER -d $$DB_NAME'" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: sh -c "systemctl start cron && python manage.py migrate && python manage.py crontab add && python manage.py runserver 0.0.0.0:8000 | python manage.py qcluster"
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

volumes:
  postgres_data: